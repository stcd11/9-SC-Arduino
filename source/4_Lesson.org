#+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+HTML_HEAD_EXTRA: <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" type="text/javascript"></script>
#+HTML_HEAD_EXTRA: <script src="js/navbar.js" type="text/javascript"></script>
#+OPTIONS: f:nil author:nil num:1 creator:nil timestamp:nil toc:nil html-style:nil

#+TITLE: Analogue Input
#+AUTHOR: C. Delport

#+BEGIN_HTML
  <div class="github-fork-ribbon-wrapper left">
    <div class="github-fork-ribbon">
      <a href="https://github.com/stcd11/9-SC-Arduino">Fork me on GitHub</a>
    </div>
  </div>
<div id="stickyribbon">
    <ul>
      <li><a href="1_Lesson.html">Week 1</a></li>
      <li><a href="2_Lesson.html">Week 2</a></li>
      <li><a href="3_Lesson.html">Week 3</a></li>
      <li><a href="4_Lesson.html">Week 4</a></li>
      <li><a href="5_Lesson.html">Week 5</a></li>
      <li><a href="6_Lesson.html">Week 6</a></li>
      <li><a href="assessment.html">Assessment</a></li>
    </ul>
  </div>
#+END_HTML
* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END:

* Analogue Inputs
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
- First we need to connect the potentiometer(POT) to the breadboard.
- You will need to bend the one leg of the POT back.
[[./img/Bend_leg.jpg]]
- Now remove the PTM switch.
[[./img/Remove_switch.jpg]]
- Now insert the POT just below where the switch was. *Check where the legs go for the switch.*
[[./img/insert_pot_1.jpg]]
- It should finally look like this.
[[./img/Pot_in_place.jpg]]
** Prepare Program
:PROPERTIES:
:HTML_CONTAINER_CLASS: make
:END:
- You will now set up a program to monitor the Analogue input.
- To do this, we are going to use the serial monitor. 
- The Arduino IDE has a feature that can be a great help in debugging sketches or controlling Arduino from your computer's keyboard. The Serial Monitor is a separate pop-up window that acts as a separate terminal that communicates by receiving and sending Serial Data.
- First, open a new Arduino sketch. Call it AnalogInputOnly.
- Then write the following code to it and download the program to your Arduino.
- Once downloaded, you can click on the serial monitor button in the top right had corner and monitor the POT by turning it clockwise and anti-clockwise.
[[./img/serial_monitor.jpg]]
- Make sure the Baud rate is set to 9600, as it is set up in your program.
[[./img/Baud_rate.jpg]]
- You will now be able to see the value change as you adjust your POT between 0-1023.
- The Genie microcontroller can set a value between 0-255. 
** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:
- Lets now write a program to control the LED when the POT is turned to a certain position.
- If your LED was removed, replace it as it was previously in the breadboard.
[[./img/Replace_LED.JPG]]
- Now start a new sketch called AnalogInput and  write the following program.
[[./img/Analogue_switch_control.png]]
#+BEGIN_HTML
<iframe width="560" height="315" src="https://www.youtube.com/embed/CYj1W5VS7p4" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
#+END_HTML 
** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:
- Take a screeshot of your code and upload it to the badge task. *Make sure you include the bottom, where it states 'Done uploading'.*
